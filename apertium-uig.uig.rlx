DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" "<:>" "<؟>"; 
SOFT-DELIMITERS = "<,>";

SETS

LIST BOS = (>>>) (sent);
LIST EOS = (<<<) (sent);

LIST N = n ; 
LIST V = v ;
LIST TV = tv ;
LIST IV = iv ; 
LIST Prop = np ; 
LIST Pron = prn ; 
LIST Num = num ; 
LIST A = adj ; 
LIST Det = det ; 
LIST Dem = dem ; 
LIST Adv = adv ; 
LIST CC = cnjcoo ; 
LIST CS = cnjsub ; 
LIST Interj = ij ; 
LIST Post = post ; 
LIST Cop = cop ; 
LIST Qst = qst ; 
LIST imp = imp ; 
LIST pass = pass ;
LIST neg = neg ; 
LIST TD = TD ; 
LIST Top = top ;
LIST Fut = fut ;
LIST Pass = pass ; 
LIST Qnt = qnt ;
LIST Che = che ; 
LIST Frm = frm ; 
LIST Dub = dub ; 
LIST Abil = abil ; 
LIST Ant = ant ; 
LIST Cog = cog ; 

LIST Case = nom gen acc abe loc dat abl ;

LIST Guess = guess ;

LIST Nom = nom ;
LIST Abl = abl ;
LIST Loc = loc ; 

LIST Subst = subst ; 
LIST Attr = attr ;
LIST Padv = postadv ; 
LIST Punct = guio ; 

##LIST Gpr = gpr_past ; 

##LIST Ger = ger_past ;

LIST Vfin = past aor fut ifi imp; 
LIST Finite = evid ifi past aor pres fut ;
LIST Prc/perf = prc_perf ;
LIST Prc/impf = prc_impf ;
LIST Prc/fut = prc_fut ;
LIST Prc/past = prc_past ;
LIST Prc/cond = prc_cond ;
LIST Gna/cond = gna_cond ;
LIST Gna/perf = gna_perf ;
LIST Ger/past = ger_past ;
LIST Ger/fut2 = ger_fut2 ;
LIST Ger/fut = ger_fut ;
LIST Gna/when = gna_when ;
LIST Gpr/fut = gpr_fut ;
LIST Gpr/past = gpr_past ;
LIST Gpr/fut2 = gpr_fut2 ;
LIST rsub = gpr_rsub gpr_rsub2 gpr_rsub3 gpr_rsub4; 
LIST vaux = vaux ; 
LIST pabs = ger_pabs ;
LIST Past = past ; 

SET Prc = Prc/perf | Prc/impf | Prc/fut | Prc/past | Prc/cond ; 
SET Gpr = Gpr/fut | Gpr/fut2 | Gpr/past ;
SET Gna = Gna/perf | Gna/when ; 
SET Ger  = Ger/past | Ger/fut2 | Ger/fut ;


SET Nonfin = Prc | Gna | Gpr | Ger ;

SET Fin = V - Nonfin ; 
SET PHRASEMARK =  ("\\") | ("\;") ; #"


LIST CC = cnjcoo ; 

LIST Pers = (prn pers) ;  # Use e.g. Sg3 + Pers to match pronouns
LIST Pl1 = (p1 pl) ;
LIST Sg2 = (p2 sg) ;
LIST Pl3 = (p3 pl) ;
LIST Sg3 = (p3 sg) ;
LIST Sg1 = (p1 sg) ;
LIST Sg3 = (p3 sg) ; 
LIST VPers = p1 p2 p3 ;

LIST Pl = pl ;
LIST Sg = sg ;

LIST Px3Sp = px3sg px3pl; 
LIST Px3Sg = px3sg ; 
LIST Px3Pl = px3pl ; 
LIST Px2Sg = px2sg ; 
LIST Px2Pl = px2pl ; 
LIST Px1Pl = px1pl ; 
LIST Px1Sg = px1sg ;

LIST Ming = "مىڭ" ;
LIST Devlet = "خانىدانلىق" "سۇلالە" "دۇلات" "ئۆلكە" "دىيار" ;

LIST Lang = "تۈركچە" "خەنزۇچە" "جۇڭگوچە" "خەنسۇچە" "خىتايچە" "ئىنگىلىزچە" "ئېنگلىزچە" "فرانسۇزچە" "ئېنگىلىزچە" "ئەرەبچە" "ئۇيغۇرچە" "پارىسچە" "مىسىرچە" "رىمچە" "شىنجاڭچە" "جۇڭگۇچە" "جوڭگۇچە" "جوڭگوچە" "چۈشەنچە" "ئوشۇقچە" "سۈيۈن" "سۆيۈن" "ئۇتتۇرچە" "سانسكرىتچە" "كىيىنچە" "كىرىلچە" "لاتىنچە" "ئۇچقۇچىسىز" "قانچە"   ;

LIST Name = "بى" "شى" "جى" "ھى" "لى" "نى" "يى" "جى" "پىڭ" ;

LIST Terep = "تەرەپ" ;

SECTION

REMOVE vaux ;

REMOVE TD IF (0 TD ) ; 

REMOVE Che IF (0 Adv) ; 
##meningche = adverb

SELECT Pers IF (0 Pers) ;



SELECT Lang IF (0 Lang) ; 

SELECT Name IF (0 Name) ;

SELECT Cog IF (-1 Ant) ;
##Abdurrahim Ötkür, not Abdurrahim keskin  

SELECT Past IF (1 EOS OR Punct) ; 
##ئاتا-ئانىسىدىن كىچىكىدىلا ئايرىلىپ، يېتىم قالغان = .. yetim kalmış, not yetim kalan.

SELECT V IF (0 Gna/cond) ; 
 # bolsa

REMOVE rsub IF (0 Abil) ; 
##atalğan = atal-ğan, not at-al-ğan

REMOVE Prc/perf IF (0 Prc/perf) ; 

REMOVE Post if (-1 BOS OR Punct);
    ## Мен сизди анъламадым.

SELECT Post IF (0 Post) ; 

SELECT Attr IF (0C Attr OR Nom) (1C N + Attr OR N + Nom);

REMOVE Attr IF (1 EOS OR Vfin) ; 

SELECT N IF (1 Px3Sp) ;

SELECT A IF (-1 Num) (1 N) ; 
 ## yette bashliq yalmawuz 

REMOVE pass + neg IF (1 Px3Sp) ;
  ## "qisqartilma adi"

SELECT rsub IF (0 Loc) ; 
 ## bolğanda = olanda, not olmuşta

SELECT rsub IF (1 N) ; 
	## gelen adam instead of gelmiş adam


REMOVE Interj IF (NOT -1 BOS) (NOT 1 EOS) ;
 #yoq, bar

REMOVE Nom IF (1C Nom) ; 



SELECT A IF (-1 N) (1 N) ; 
 ## bu öy qara taghqa ..

SELECT A IF (1 Cop) ; 
 ## qorqunchluq idi

SELECT Adv IF (1 A) ; 

REMOVE Nonfin IF (NOT -1* Fin) (1 EOS) ;

REMOVE Gpr IF (0C Gpr OR Ger OR Vfin) (1 EOS) ;

REMOVE Det IF (1 CC) ;

REMOVE imp IF (-1 Ger) ;
 ##giriş-çıkış

REMOVE Sub:1 Post (0 A) ; 
#tatlı, not tat+lı

SELECT A IF (0 rsub) ; 
##atalğan = adı geçen, not anlandırılan

SELECT Dem IF (1 A) ; 
  ## şu sebiy arzuliri..

SELECT Pron IF (1 Post) ;
 ## néme üçün.. 

##REMOVE Padv IF (1 EOS) ; 
## قىزىم كاۋا ئالاتتىڭىزمۇ ؟!

##SELECT SUB:1 Padv ; 
 ## menmu = ben de. Will write a specific rule for the question mark.

SELECT Padv IF (0 Padv) ; 
 ## menmu = ben de. Will write a specific rule for the question mark.

SELECT Adv IF (-1 CC OR Post) (1 N) ; 
  ## u bilen bille shunlargha 

SELECT N IF (0 Ming)(1 Devlet) ; 

SELECT Num IF (0 Ming) ; 
 ## 15 ming

SELECT Top IF (0 Sg) ;
  ## Xitay bash ministeri..

REMOVE Top IF (0 Pl) ; 
 ## xitaylar

SELECT Terep IF (0 Px3Sp + Abl) (1* TV BARRIER IV) ;
 ## adem terıpıden .. uyushturuldı.

REMOVE rsub IF (0 Loc) ;
 ## bolğanda -> olunca instead of olanda

REMOVE pabs IF (0 Loc) ;
 ## bolğanda -> olunca instead of olmuşta

REMOVE IV IF (0 TV + Pass) ; 
 ## tonushtur-ul instead of #tonushturul# (to better match tur.lexc structure)

REMOVE A IF (0 Pron) (NOT 1* N BARRIER V) ;
 ## öz = kendi

SELECT Nom IF (0 Qnt) ;

REMOVE rsub IF (0 N) ; 
## közetküchi = gözetmen instead of gözeten

REMOVE Dub IF (0 Past) ;
## erishken = erish-ken, not eri-sh-ken

REMOVE Sub:1 Pl1 IF (0 Px1Pl) ;
#harwamız = our car, not 'we are car'

REMOVE A IF (1 A) ; 

REMOVE Px3Pl IF (NOT -1* Pl3 BARRIER N) ;

SELECT A IF (-1 N) (0 Post) (1 N); 
# yol

SELECT Sub:1 Finite IF (1 EOS OR PHRASEMARK) ;
	# Hayattaki son dersi "kendi ölümü" [0]olacakmış.

REMOVE Subst + Nom IF (0 (*) - Subst - Nom) ;
#275 milyon, 

SELECT Gpr if
	(0 Finite)
	(0 Nom)
	(1 N) ;
	# kabul bolunmaydığan duağa

REMOVE Guess ;
